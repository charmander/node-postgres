name: Node.js CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node:
          - dubnium-alpine3.11
          - erbium-alpine3.12
          # node 13.7 seems to have changed behavior of async iterators exiting early on streams
          # if 13.8 still has this problem when it comes down I'll talk to the node team about the change
          # in the mean time...peg to 13.6
          - 13.6-alpine3.11
          - 14-alpine3.12
        postgres:
          - ghcr.io/charmander/pg-test-postgres:10
        include:
          - node: 14-alpine3.12
            postgres: ghcr.io/charmander/pg-test-postgres:9.6
          - node: 14-alpine3.12
            postgres: ghcr.io/charmander/pg-test-postgres:9.5
          - node: 14-alpine3.12
            postgres: ghcr.io/charmander/pg-test-postgres:9.4
          - node: 14-alpine3.12
            postgres: ghcr.io/charmander/pg-test-postgres:9.3
          - node: 14-alpine3.12
            postgres: ghcr.io/charmander/pg-test-postgres:9.2

    container:
      image: docker.io/library/node:${{ matrix.node }}

    services:
      db:
        image: ${{ matrix.postgres }}
        env:
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
      - uses: actions/checkout@v2

      - name: Cache system dependencies
        uses: actions/cache@v2
        with:
          path: /var/cache/apk
          key: cache-${{ runner.os }}-tests-apk-${{ hashFiles('.github/workflows/tests.yml') }}
          restore-keys: |
            cache-${{ runner.os }}-tests-apk-

      - name: Install system dependencies
        run: |
          apk add --update \
            tar \
            git make postgresql-client \
            clang libc-dev g++ postgresql-dev python3

      - name: Cache Node dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: cache-${{ runner.os }}-node-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            cache-${{ runner.os }}-node-

      - name: Install Node dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Create test tables
        run: node packages/pg/script/create-test-tables.js postgresql://postgres@db/

      - name: Test
        run: yarn test
        env:
          CC: clang
          CXX: clang++
          npm_config_clang: 1
          PGHOST: db
          PGUSER: postgres
          PGDATABASE: postgres

      - name: Test password authentication
        run: yarn test
        env:
          CC: clang
          CXX: clang++
          npm_config_clang: 1
          PGHOST: db
          PGUSER: postgres_password
          PGDATABASE: postgres
          PGPASSWORD: test-password
          SCRAM_TEST_PGUSER: scram_test
          SCRAM_TEST_PGPASSWORD: test4scram

      - name: Test client certificate authentication
        run: |
          cd packages/pg
          chmod go= test/tls/test-client.key
          node test/integration/connection-pool/tls-tests.js
          npm install --no-save pg-native
          node test/integration/connection-pool/tls-tests.js native
        env:
          CC: clang
          CXX: clang++
          npm_config_clang: 1
          PGHOST: db
          PGUSER: postgres
          PGDATABASE: postgres
          PGSSLMODE: verify-full
          PGSSLROOTCERT: test/tls/test-server-ca.crt
          PGSSLCERT: test/tls/test-client.crt
          PGSSLKEY: test/tls/test-client.key
          PG_CLIENT_CERT_TEST: 1
